<Window x:Class="WpfExam.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:res="clr-namespace:WpfExam.Properties"
        xmlns:singleton="clr-namespace:WpfExam.Model"
        xmlns:cal="http://www.caliburnproject.org"
        MinHeight="620" MinWidth="540">
    <Window.Resources>
        <Style x:Key="ControlButton" TargetType="Border">
            <Setter Property="Control.Width" Value="40"/>
            <Setter Property="Control.Height" Value="40"/>
            <Setter Property="Border.CornerRadius" Value="5"/>
            <Setter Property="Control.Margin" Value="10,10,10,10"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property = "IsMouseOver" Value = "True">
                    <Setter Property="Control.Background" Value="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.AccentColor, UpdateSourceTrigger=PropertyChanged}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SearchField" TargetType="Border">
            <Setter Property="Height" Value="44"></Setter>
            <Setter Property="BorderThickness" Value="2"></Setter>
            <Setter Property="Border.CornerRadius" Value="7"/>
            <Setter Property="BorderBrush" Value="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.AccentColor, UpdateSourceTrigger=PropertyChanged}"></Setter>
            <Style.Resources>
                <Style TargetType="DockPanel">
                    <Style.Resources>
                        <Style TargetType="TextBox">
                            <Setter Property="Control.Margin" Value="0,-2,0,-2"/>
                            <Setter Property="FontSize" Value="27"></Setter>
                            <Setter Property="BorderThickness" Value="2"></Setter>
                            <Setter Property="BorderBrush" Value="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.AccentColor, UpdateSourceTrigger=PropertyChanged}"></Setter>
                            <Setter Property="Background" Value="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.OverlayColor, UpdateSourceTrigger=PropertyChanged}"></Setter>
                            <Setter Property="Foreground" Value="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.TextColor, UpdateSourceTrigger=PropertyChanged}"></Setter>
                        </Style>
                        <Style TargetType="Border">
                            <Setter Property="Control.Width" Value="40"/>
                            <Setter Property="Control.Height" Value="40"/>
                            <Setter Property="Border.CornerRadius" Value="5"/>
                            <Setter Property="Control.Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property = "IsMouseOver" Value = "True">
                                    <Setter Property="Control.Background" Value="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.AccentColor, UpdateSourceTrigger=PropertyChanged}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>



    <Grid Background="White">
        <DockPanel>
            <DockPanel DockPanel.Dock="Top"
                        Background="{Binding Source={x:Static singleton:ThemeSingleton.Instance}, Path=CurrentTheme.OverlayColor, UpdateSourceTrigger=PropertyChanged}">
                <Border Style="{StaticResource ControlButton}" DockPanel.Dock="Left"
                        cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Back]">
                    <Image Margin="5,5,5,5"
                           Source="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=BackIcon, UpdateSourceTrigger=PropertyChanged}">
                    </Image>
                </Border>
                <Border Style="{StaticResource ControlButton}" DockPanel.Dock="Left"
                        cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Forward]">
                    <Image Margin="5,5,5,5"
                           Source="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=ForwardIcon, UpdateSourceTrigger=PropertyChanged}">
                    </Image>
                </Border>
                <Border Style="{StaticResource ControlButton}" DockPanel.Dock="Right"
                        cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Settings]">
                    <Image Margin="5,5,5,5">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="40" UriSource="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=SettingsIcon}" />
                        </Image.Source>
                    </Image>
                </Border>
                <Border Style="{StaticResource ControlButton}" DockPanel.Dock="Right"
                        cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Refresh]">
                    <Image Margin="5,5,5,5">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="40" UriSource="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=RefreshIcon}" />
                        </Image.Source>
                    </Image>
                </Border>
                <Border Style="{StaticResource ControlButton}" DockPanel.Dock="Right"
                        cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Search]">
                    <Image Margin="5,5,5,5">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="40" UriSource="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=SearchIcon}" />
                        </Image.Source>
                    </Image>
                </Border>
                <Border Style="{StaticResource ControlButton}" DockPanel.Dock="Right"
                        cal:Message.Attach="[Event MouseLeftButtonUp] = [Action OpenBackup]">
                    <Image Margin="5,5,5,5">
                        <Image.Source>
                            <BitmapImage DecodePixelWidth="40" UriSource="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=StorageIcon}" />
                        </Image.Source>
                    </Image>
                </Border>
                <Border DockPanel.Dock="Left" Style="{StaticResource SearchField}">
                    <DockPanel>
                        <Border DockPanel.Dock="Left"
                                cal:Message.Attach="[Event MouseLeftButtonUp] = [Action Up]">
                            <Image Margin="5,5,5,5" 
                                   Source="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=UpIcon, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            </Image>
                        </Border>
                        <Border DockPanel.Dock="Right"
                                cal:Message.Attach="[Event MouseLeftButtonUp] = [Action GoTo]">
                            <Image Margin="5,5,5,5">
                                <Image.Source>
                                    <BitmapImage DecodePixelWidth="40" UriSource="{Binding Source={x:Static singleton:IconSingleton.Instance}, Path=ForwardHighlightedIcon}" />
                                </Image.Source>
                            </Image>
                        </Border>
                        <TextBox DockPanel.Dock="Right" Text="{Binding Source={x:Static singleton:ExplorerSingleton.Instance}, Path=Path, UpdateSourceTrigger=PropertyChanged}">
                        </TextBox>
                    </DockPanel>
                </Border>
            </DockPanel>
            <ContentControl Content="{Binding CurrentView}" DockPanel.Dock="Top"></ContentControl>
        </DockPanel>
    </Grid>

</Window>